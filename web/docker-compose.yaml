version: '2'

services:
    # consul server，对外暴露的ui接口为8500，只有在2台consul服务器的情况下集群才起作用
#    consul_server:
#      image: progrium/consul:latest
#      hostname: consul_server
#      ports:
#        - "8300"
#        - "8400"
#        - "8500:8500"
#        - "53"
#      command: -server -ui-dir /ui -data-dir /tmp/consul --bootstrap-expect=1
    # consul server1在consul server服务起来后，加入集群中
#    consul_server_1:
#      image: progrium/consul:latest
#      hostname: consul_server_1
#      depends_on:
#        - "consul_server"
#      ports:
#        - "8300"
#        - "8400"
#        - "8500"
#        - "53"
#      command: -server -data-dir /tmp/consul -join consul_server
#    # consul server2在consul server服务起来后，加入集群中
#    consul_server_2:
#      image: progrium/consul:latest
#      hostname: consul_server_2
#      depends_on:
#        - "consul_server"
#      ports:
#        - "8300"
#        - "8400"
#        - "8500"
#        - "53"
#      command: -server -data-dir /tmp/consul -join consul_server
#    registrator:
#      image: gliderlabs/registrator:master
#      hostname: registrator
#      volumes:
#        - "/var/run/docker.sock:/tmp/docker.sock"
#      command: -internal consul://consul_server:8500
#    nginx_consul_template:
#        build: ./nginx_consul_template
#        hostname: nginx_consul_template
#        restart: always
#        volumes:
#          - "./nginx_consul_template/nginx/www:/usr/share/nginx/html"
#          - "./nginx_consul_template/nginx/conf/nginx.conf:/etc/nginx/nginx.conf"
#          - "./nginx_consul_template/nginx/conf/conf.d:/etc/nginx/conf.d"
#          - "./nginx_consul_template/nginx/log:/var/log/nginx"
#        links:
#          - consul_server:consul
#        ports:
#          - "8100:80"
#        depends_on:
#          - "nginx"
    nginx:
        build: ./nginx/
        ports:
            - "80:80"
            - "443:443"
        restart: always
        volumes:
            - ./_public:/etc/nginx/html:ro
            - ./nginx/conf/conf.d:/etc/nginx/conf.d:ro
            - ./nginx/conf/nginx.conf:/ect/nginx/nginx.conf:ro
            - ./nginx/log:/etc/nginx/logs:rw
        links:
            - php:php
        environment:
          - SERVICE_80_NAME=service_http
          - SERVICE_443_NAME=service_https
    php:
        build: ./php/
        ports:
            - "9000:9000"
        expose:
          - "9000"
        restart: always
        volumes:
            - ./_public:/usr/share/nginx/html:ro
            - ./php/conf/php.ini:/usr/local/etc/php/php.ini:ro
            - ./php/conf/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro
            - ./php/log/php-fpm.log:/var/log/php-fpm/php-fpm.log:rw
        links:
             - mysql:mysql
#            - mongo:mongo
#            - redis:redis
#            - memcached:memcached
#            - solr:solr
             - es:es
#            - rabbitmq:rabbitmq
    mysql:
        image: mysql:latest
        ports:
            - "3306:3306"
        restart: always
        volumes:
            - ./mysql/data/:/var/lib/mysql/:rw
            - ./mysql/conf/my.cnf:/etc/mysql/my.cnf:ro
            - ./mysql/conf/mysql.conf.d:/etc/mysql/mysql.conf.d:ro
            - ./mysql/log/error.log:/var/log/mysql/error.log:rw
            - ./mysql/mysql-files/:/var/lib/mysql-files/:rw
        environment:
            MYSQL_ROOT_PASSWORD: "root"
            MYSQL_USER: "jidan"
            MYSQL_PASSWORD: "jidan"
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#    mongo:
#      image: mongo
#      ports:
#        - "27017:27017"
#    redis:
#      image: redis
#      ports:
#        - "6379:6379"
#      expose:
#        - "3306"
#      volumes:
#        - ./redis/data:/data:rw
#      restart: always
#    memcached:
#      image: memcached:latest
#      ports:
#        - "11211:11211"
#      expose:
#        - "11211"
#      restart: always
#    solr:
#      image: solr:7.5.0
#      ports:
#        - "8983:8983"
#      volumes:
#        - ./solr/data:/opt/solr/server/solr/mycores
#      entrypoint:
#        - docker-entrypoint.sh
#        - solr-precreate
#        - mycore
    es:
        build: ./elasticsearch
        ports:
          - "9200:9200"
          - "9300:9300"
        volumes:
          - ./elasticsearch/data:/usr/share/elasticsearch/data:rw
          - ./elasticsearch/log/err.log:/tmp/hs_err_pid1.log:rw
        environment:
          - cluster.name=docker-cluster
          - bootstrap.memory_lock=true
          - xpack.security.enabled=false
#          - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    es_head:
#      image: mobz/elasticsearch-head:5-alpine



#    rabbitmq:
#      image: rabbitmq:3.6.1-management
#      ports:
#        - "15672:15672"
#        - "5672:5672"