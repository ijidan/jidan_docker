$ docker run -d \
    --name=registrator-docker \
    --net=host \
    --volume=/var/run/docker.sock:/tmp/docker.sock \
    gliderlabs/registrator:latest \
      consul://localhost:8500




docker run -d -p 8500:8500 -server -bind 172.18.18.10 -bootstrap --name consul-docker consul

docker run -p 8500:8500 --name consul-docker consul -server -advertise 127.0.0.1 -bootstrap



docker run -d -p 8400:8400 -p 8500:8500 -p 8600:53/udp -h consul-node1 --name consul-docker progrium/consul -server -bootstrap -ui-dir /ui





docker run -d -h node1 -v /mnt:/data \
    -p 10.0.1.1:8300:8300 \
    -p 10.0.1.1:8301:8301 \
    -p 10.0.1.1:8301:8301/udp \
    -p 10.0.1.1:8302:8302 \
    -p 10.0.1.1:8302:8302/udp \
    -p 10.0.1.1:8400:8400 \
    -p 10.0.1.1:8500:8500 \
    -p 172.17.42.1:53:53/udp \
    progrium/consul -server -advertise 10.0.1.1 -bootstrap-expect 3




docker run -d -p 8400:8400 -p 8500:8500 -p 8600:53/udp -h consul --name consul progrium/consul -server -advertise 172.18.18.10 -bootstrap


docker run -d -v /var/run/docker.sock:/tmp/docker.sock --name registrator -h registrator  gliderlabs/registrator:latest consul://consul:8500


consul-template -consul=172.18.18.10:8500 -template="/Users/goyoo/workspace/consul-template/tmpl/app.conf:/Users/goyoo/workspace/consul-template/conf/app.conf"





docker run -d -p 8000:80 -v /Users/mac/www/nginx-template/nginx/conf/conf.d:/etc/nginx/conf.d -v /Users/mac/www/nginx-template/nginx/conf/nginx.conf:/etc/nginx/nginx.conf --name nt-nginx-docker nt-nginx:latest

docker run -d -p 8400:8400 -p 8500:8500 -p 8600:53/udp -h $CONSUL_IP --name consul progrium/consul -server  -bootstrap

docker run -d -v /var/run/docker.sock:/tmp/docker.sock --name registrator -h registrator-host  gliderlabs/registrator:latest consul://$CONSUL_IP:8500






consul-template -consul=127.0.0.1:8500 -template="/Users/goyoo/workspace/consul-template/tmpl/app.conf:/Users/goyoo/workspace/consul-template/conf/app.conf"

docker run -d -v /Users/mac/www/nginx-template/nginx/conf/conf.d:/etc/nginx/conf.d/nginx.conf.ctmpl:/etc/consul-templates/nginx.conf.ctmpl -h consul-template-host --name consul-template hashicorp/consul-template -consul-addr=consul-host:8500 -template "/etc/consul-templates/nginx.conf.ctmpl:/etc/nginx/conf.d/app.conf:nginx -s reload"

consul-template \
     -consul-addr=consul:8500 \
     -template "/etc/consul-templates/nginx.conf.ctmpl:/etc/nginx/conf.d/app.conf:nginx -s reload"



{{ range nodes }}
{{ .Address }}{{ end }}


{{ range nodes "@dc2~_agent" }}
{{ .Address }}{{ end }}


{{ range service "web" }}
server {{ .Name }}{{ .Address }}:{{ .Port }}{{ end }}


$ consul-template \
    -template "/tmp/config.ctmpl:/tmp/server.conf" \
    -exec "/bin/my-server -config /tmp/server.conf"

$ consul-template \
  -template "in.ctmpl:out.file:/bin/bash -c 'service nginx restart || true'"

$ consul-template \
    -template "/tmp/nginx.ctmpl:/var/nginx/nginx.conf:nginx -s reload" \
    -template "/tmp/redis.ctmpl:/var/redis/redis.conf:service redis restart" \
    -template "/tmp/haproxy.ctmpl:/var/haproxy/haproxy.conf"

$ consul-template \
    -consul-addr "10.4.4.6:8500" \
    -vault-addr "https://10.5.32.5:8200"


{{ range services }}
{{ range service .Name }}
  {{ .Address }}
{{ end }}{{ end }}



